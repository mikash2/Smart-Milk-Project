
services:
  # Infrastructure
  mqtt:
    image: eclipse-mosquitto
    ports:
      - "1883:1883"   
    volumes:
      - mosquitto_data:/mosquitto/data
      - ./mosquitto/config:/mosquitto/config
   
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./DB/mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "${HOST_MYSQL_PORT:-3306}:3306"   
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u${MYSQL_USER} -p${MYSQL_PASSWORD} --silent"]
      interval: 10s
      timeout: 5s
      retries: 30
    restart: unless-stopped

  # Application Services
  weight-service:
    build: ./weight-service
    environment:
      MQTT_HOST: mqtt
      MQTT_TOPIC: milk/weight
    depends_on:
      - mqtt

  analysis-service:
    build: ./analysis-service
    environment:
      MQTT_HOST: mqtt
      MQTT_PORT: 1883
      MQTT_TOPIC: milk/weight

      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

      DEVICE_ID: device1

      PYTHONUNBUFFERED: "1"
    depends_on:
      mysql:
        condition: service_healthy
      mqtt:
        condition: service_started

  updates-service:
    build: ./updates-service
    environment:
      # MQTT
      MQTT_HOST: mqtt
      MQTT_PORT: 1883

      # MySQL (תואם ל-MYSQL_* מה-.env)
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

      MQTT_TOPIC: milk/weight
      DEVICE_ID: device1
      ALERT_THRESHOLD: 200

      # Email / SMTP (from .env)
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      FROM_EMAIL: ${FROM_EMAIL}
      ALERT_COOLDOWN_MIN: ${ALERT_COOLDOWN_MIN}
      DRY_RUN_EMAIL: ${DRY_RUN_EMAIL}

      PYTHONUNBUFFERED: "1"
    depends_on:
      mysql:
        condition: service_healthy
      mqtt:
        condition: service_started
    # restart: unless-stopped

  users-service:
    # אם התיקייה שלך נקראת "users-service" שימי: ./users-service
    build:
      context: ./users-service
      dockerfile: Dockerfile
    image: smart-milk/users-service:1.1
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: development
      PORT: "3000"
      ALLOWED_ORIGINS: http://localhost:5173
      JWT_SECRET: please_change_me

      # === חיבור ל־MySQL בתוך הרשת של compose ===
      # פנימי: תמיד 3306; אל תשתמשי host.docker.internal כאן
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

      # תאימות לאחור (אם הקוד קורא DB_*):
      DB_HOST: mysql
      DB_PORT: "3306"
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PASSWORD}

    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped


volumes:
  mysql_data:
  mosquitto_data: