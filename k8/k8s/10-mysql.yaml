apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: smart-milk
spec:
  accessModes: ["ReadWriteOnce"]
  resources: { requests: { storage: 5Gi } }

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: smart-milk
spec:
  selector: { app: mysql }
  ports:
    - port: 3306
      targetPort: 3306

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: smart-milk
spec:
  serviceName: mysql
  replicas: 1
  selector: { matchLabels: { app: mysql } }
  template:
    metadata:
      labels: { app: mysql }
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          ports: [{ containerPort: 3306 }]
          env:
            - { name: MYSQL_ROOT_PASSWORD, valueFrom: { secretKeyRef: { name: mysql-secret, key: MYSQL_ROOT_PASSWORD } } }
            - { name: MYSQL_DATABASE,      valueFrom: { secretKeyRef: { name: mysql-secret, key: MYSQL_DATABASE } } }
            - { name: MYSQL_USER,          valueFrom: { secretKeyRef: { name: mysql-secret, key: MYSQL_USER } } }
            - { name: MYSQL_PASSWORD,      valueFrom: { secretKeyRef: { name: mysql-secret, key: MYSQL_PASSWORD } } }
          volumeMounts:
            - { name: data, mountPath: /var/lib/mysql }
            - { name: init-sql, mountPath: /docker-entrypoint-initdb.d }
          readinessProbe:
            exec: { command: ["sh","-c","mysqladmin ping -h 127.0.0.1 -p$MYSQL_ROOT_PASSWORD"] }
            periodSeconds: 5
            initialDelaySeconds: 15
          livenessProbe:
            exec: { command: ["sh","-c","mysqladmin ping -h 127.0.0.1 -p$MYSQL_ROOT_PASSWORD"] }
            periodSeconds: 10
            initialDelaySeconds: 30
      volumes:
        - name: data
          persistentVolumeClaim: { claimName: mysql-pvc }
        - name: init-sql
          configMap:
            name: mysql-init-sql
            defaultMode: 0444
